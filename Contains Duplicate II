Given an integer array nums and an integer k, return true if there are two distinct indices i and j in the array such that nums[i] == nums[j] and abs(i - j) <= k.
Example 1:
Input: nums = [1,2,3,1], k = 3
Output: true
Example 2:
Input: nums = [1,0,1,1], k = 1
Output: true
Example 3:
Input: nums = [1,2,3,1,2,3], k = 2
Output: false
---------------------------------------------------------------------------------------------------------------------------------
class Solution(object):
    def containsNearbyDuplicate(self, nums, k):
        mydic = {}
        for i in range(len(nums)):
            if nums[i] in mydic and abs(i - mydic[nums[i]]) <= k:
                return True
            mydic[nums[i]] = i
        return False
----------------------------------------------------------------------------------------------------------------------------
class Solution:
    def containsNearbyDuplicate(self, nums: List[int], k: int) -> bool:
        hashmap = {}
        for i in range(len(nums)):
            if nums[i] in hashmap:
                if abs(hashmap[nums[i]] - i) <= k:
                    return True
            hashmap[nums[i]] = i
        return False
--------------------------------------------------------------------------------------------------------------------------------
class Solution:
    def containsNearbyDuplicate(self, nums: List[int], k: int) -> bool:
        # Iterate through each element in the list
        for i in range(len(nums)):
            # Check elements within the range i+1 to i+k
            for j in range(i + 1, min(i + k + 1, len(nums))):
                # If a duplicate is found within the range, return True
                if nums[i] == nums[j]:
                    return True
        # If no such pair is found, return False
        return False









