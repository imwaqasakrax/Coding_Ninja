Given an array arr, return the second largest distinct element from an array. If the second largest element doesn't exist then return -1.
Examples:
Input: arr = [12, 35, 1, 10, 34, 1]
Output: 34
Explanation: The largest element of the array is 35 and the second largest element is 34.
Input: arr = [10, 10]
Output: -1
Explanation: The largest element of the array is 10 and the second largest element does not exist so answer is -1.
---------------------------------------------------------------------------------------------------------------------------------------------------------------
class Solution:
    def print2largest(self, arr):
        arr.sort(reverse= True)
        for i in range(1,len(arr)):
            if arr[i]!=arr[0]:
                return arr[1]
------------------------------------------------------------------------------------------------------------------------
class Solution:
    def print2largest(self, arr):
        largest = second = float('-inf')
        for i in range(len(arr)):
            if arr[i] > largest:
                second = largest  
                largest = arr[i]
            elif arr[i] > second and arr[i] != largest:
                second = arr[i]
        return second if second != float('-inf') else None
-----------------------------------------------------------------------------------------------------
class Solution:
    def getSecondLargest(self, arr):
        arr = list(set(arr))
        arr.sort(reverse=True)
        if len(arr) < 2:
            return -1
        return arr[1]
-----------------------------------------------------------------------------------------------------------------
#User function Template for python3
class Solution:
    def getSecondLargest(self, arr):
        unique_sorted = sorted(set(arr), reverse=True)
        if len(unique_sorted) < 2:
            return -1  
        else:
            return unique_sorted[1]  

