Given an array arr[]. Push all the zeros of the given array to the right end of the array while maintaining the order of non-zero elements. Do the mentioned change in the array in place.
Examples:
Input: arr[] = [1, 2, 0, 4, 3, 0, 5, 0]
Output: [1, 2, 4, 3, 5, 0, 0, 0]
Explanation: There are three 0s that are moved to the end.
Input: arr[] = [10, 20, 30]
Output: [10, 20, 30]
Explanation: No change in array as there are no 0s.
Input: arr[] = [0, 0]
Output: [0, 0]
Explanation: No change in array as there are all 0s.
-------------------------------------------------------------------------------------------------------------------------------------------------------------
class Solution:
    def pushZerosToEnd(self, arr):
        zero1 = []
        non_zero = []
        
        # Separate zeros and non-zeros
        for i in arr:
            if i == 0:
                zero1.append(i)
            else:
                non_zero.append(i)
     
        arr[:] = non_zero + zero1
        return arr
----------------------------------------------------------------------------------------------------------------------------
class Solution:
    def pushZerosToEnd(self, arr):
        non_zero = 0
        n = len(arr)
        for i in range(n) :
            if arr[i] != 0:
                arr[non_zero],arr[i]=arr[i],arr[non_zero]
                non_zero += 1
                
        return arr
        
